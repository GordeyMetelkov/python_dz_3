# В большой текстовой строке подсчитать количество встречаемых слов
# и вернуть 10 самых частых. Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.

my_txt = """Руководство по Python
    Python - это простой в освоении, мощный язык программирования. 
    Он обладает эффективными высокоуровневыми структурами данных и простым, 
    но эффективным подходом к объектно-ориентированному программированию. 
    Элегантный синтаксис Python и динамическая типизация вместе с его 
    интерпретируемым характером делают его идеальным языком для написания сценариев 
    и быстрой разработки приложений во многих областях на большинстве платформ.
    Интерпретатор Python и обширная стандартная библиотека свободно доступны в 
    исходном виде или в двоичном виде для всех основных платформ с веб-сайта Python, 
    https://www.python.org/ и могут свободно распространяться. На этом же сайте
    также содержатся дистрибутивы и указатели на множество бесплатных модулей, 
    программ и инструментов Python сторонних производителей, а также дополнительная 
    документация.) Интерпретатор Python легко расширяется за счет новых функций и 
    типов данных, реализованных на C или C ++ (или других языках, вызываемых из C). 
    Python также подходит в качестве языка расширения для настраиваемых приложений. 
    Это руководство неофициально знакомит читателя с основными концепциями и 
    функциями языка и системы Python. Для практического использования полезно иметь 
    под рукой интерпретатор Python, но все примеры являются автономными, поэтому 
    руководство также можно прочитать в автономном режиме. Описание стандартных 
    объектов и модулей см. в Стандартной библиотеке Python. Справочник по языку 
    Python дает более формальное определение языка. Чтобы написать расширения на 
    C или C ++, ознакомьтесь с расширением и внедрением интерпретатора Python и 
    справочным руководством по Python / C API. Существует также несколько книг, 
    подробно освещающих Python. Это руководство не пытается быть всеобъемлющим и 
    охватывать каждую отдельную функцию или даже каждую часто используемую функцию. 
    Вместо этого в нем представлены многие из наиболее 
    примечательных функций Python и оно 
    даст вам хорошее представление об особенностях и стиле языка. Прочитав его, 
    вы сможете читать и писать модули и программы на Python и будете готовы узнать 
    больше о различных библиотечных модулях Python, описанных в Стандартной 
    библиотеке Python."""
count_popular_words = 10
punctuiation = [',', '.', '!', '?', ':', ';', '...']
for item in punctuiation:
    my_txt = my_txt.replace(item, '')
my_txt = my_txt.lower()
list = my_txt.split()
count_dict = {}

for item in set(list):
    count_dict[item] = list.count(item)

sorted_values = set()
for value in count_dict.values():
    sorted_values.add(value)

my_list = []
for item in sorted_values:
    my_list.append(item)
my_list = my_list[::-1]
res = []
for item in my_list:
    for key in count_dict:
        if item == count_dict[key]:
            res.append(( f"Слово '{key}' встречается {item} раз(-а)"))
print(res[0:count_popular_words])